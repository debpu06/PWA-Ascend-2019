//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPiServer.Campaign.Extensions.MailingService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing")]
    public partial class WebserviceException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object causeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public object cause {
            get {
                return this.causeField;
            }
            set {
                this.causeField = value;
                this.RaisePropertyChanged("cause");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", ConfigurationName="MailingService.MailingWebservice")]
    public interface MailingWebservice {
        
        // CODEGEN: Parameter 'getHeaderReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getHeaderReturn")]
        EPiServer.Campaign.Extensions.MailingService.getHeaderResponse getHeader(EPiServer.Campaign.Extensions.MailingService.getHeaderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getHeaderResponse> getHeaderAsync(EPiServer.Campaign.Extensions.MailingService.getHeaderRequest request);
        
        // CODEGEN: Parameter 'getDataSetReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDataSetReturn")]
        EPiServer.Campaign.Extensions.MailingService.getDataSetResponse getDataSet(EPiServer.Campaign.Extensions.MailingService.getDataSetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getDataSetResponse> getDataSetAsync(EPiServer.Campaign.Extensions.MailingService.getDataSetRequest request);
        
        // CODEGEN: Parameter 'getColumnNamesReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getColumnNamesReturn")]
        EPiServer.Campaign.Extensions.MailingService.getColumnNamesResponse getColumnNames(EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getColumnNamesResponse> getColumnNamesAsync(EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest request);
        
        // CODEGEN: Parameter 'getDataSetFlatReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDataSetFlatReturn")]
        EPiServer.Campaign.Extensions.MailingService.getDataSetFlatResponse getDataSetFlat(EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getDataSetFlatResponse> getDataSetFlatAsync(EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setMimeType(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setMimeTypeAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setDefaultRecipientFilterEnabled(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setDefaultRecipientFilterEnabledAsync(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isDefaultRecipientFilterEnabledReturn")]
        bool isDefaultRecipientFilterEnabled(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isDefaultRecipientFilterEnabledReturn")]
        System.Threading.Tasks.Task<bool> isDefaultRecipientFilterEnabledAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setOpenTrackingEnabled(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setOpenTrackingEnabledAsync(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isOpenTrackingEnabledReturn")]
        bool isOpenTrackingEnabled(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isOpenTrackingEnabledReturn")]
        System.Threading.Tasks.Task<bool> isOpenTrackingEnabledAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setClickTrackingEnabled(string in0, long in1, string in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setClickTrackingEnabledAsync(string in0, long in1, string in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isClickTrackingEnabledReturn")]
        bool isClickTrackingEnabled(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isClickTrackingEnabledReturn")]
        System.Threading.Tasks.Task<bool> isClickTrackingEnabledAsync(string in0, long in1, string in2);
        
        // CODEGEN: Parameter 'getRecipientListIdsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getRecipientListIdsReturn")]
        EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsResponse getRecipientListIds(EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsResponse> getRecipientListIdsAsync(EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest request);
        
        // CODEGEN: Parameter 'in2' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsResponse setRecipientListIds(EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsResponse> setRecipientListIdsAsync(EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMaxRecipientsReturn")]
        float getMaxRecipients(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMaxRecipientsReturn")]
        System.Threading.Tasks.Task<float> getMaxRecipientsAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isMaxRecipientsRandomOrderReturn")]
        bool isMaxRecipientsRandomOrder(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isMaxRecipientsRandomOrderReturn")]
        System.Threading.Tasks.Task<bool> isMaxRecipientsRandomOrderAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setMaxRecipients(string in0, long in1, int in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setMaxRecipientsAsync(string in0, long in1, int in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setMaxRecipientsPercentage(string in0, long in1, float in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setMaxRecipientsPercentageAsync(string in0, long in1, float in2, bool in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isMaxRecipientsPercentageReturn")]
        bool isMaxRecipientsPercentage(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isMaxRecipientsPercentageReturn")]
        System.Threading.Tasks.Task<bool> isMaxRecipientsPercentageAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMaxMailsPerHourReturn")]
        int getMaxMailsPerHour(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMaxMailsPerHourReturn")]
        System.Threading.Tasks.Task<int> getMaxMailsPerHourAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setMaxMailsPerHour(string in0, long in1, int in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setMaxMailsPerHourAsync(string in0, long in1, int in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getOverallRecipientCountReturn")]
        int getOverallRecipientCount(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getOverallRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getOverallRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSentRecipientCountReturn")]
        int getSentRecipientCount(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSentRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getSentRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFailedRecipientCountReturn")]
        int getFailedRecipientCount(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFailedRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getFailedRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPredictedRecipientCountReturn")]
        int getPredictedRecipientCount(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPredictedRecipientCountReturn")]
        System.Threading.Tasks.Task<int> getPredictedRecipientCountAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void pause(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task pauseAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void restart(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task restartAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSendingStartedDateReturn")]
        System.DateTime getSendingStartedDate(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSendingStartedDateReturn")]
        System.Threading.Tasks.Task<System.DateTime> getSendingStartedDateAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSendingFinishedDateReturn")]
        System.DateTime getSendingFinishedDate(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSendingFinishedDateReturn")]
        System.Threading.Tasks.Task<System.DateTime> getSendingFinishedDateAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendMailReturn")]
        int sendMail(string in0, long in1, long in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendMailReturn")]
        System.Threading.Tasks.Task<int> sendMailAsync(string in0, long in1, long in2, string in3);
        
        // CODEGEN: Parameter 'sendMailsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendMailsReturn")]
        EPiServer.Campaign.Extensions.MailingService.sendMailsResponse sendMails(EPiServer.Campaign.Extensions.MailingService.sendMailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendMailsResponse> sendMailsAsync(EPiServer.Campaign.Extensions.MailingService.sendMailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendTestMailReturn")]
        int sendTestMail(string in0, long in1, long in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendTestMailReturn")]
        System.Threading.Tasks.Task<int> sendTestMailAsync(string in0, long in1, long in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendTestMail2Return")]
        int sendTestMail2(string in0, long in1, string in2, long in3, string in4);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendTestMail2Return")]
        System.Threading.Tasks.Task<int> sendTestMail2Async(string in0, long in1, string in2, long in3, string in4);
        
        // CODEGEN: Parameter 'sendTestMailsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendTestMailsReturn")]
        EPiServer.Campaign.Extensions.MailingService.sendTestMailsResponse sendTestMails(EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendTestMailsResponse> sendTestMailsAsync(EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest request);
        
        // CODEGEN: Parameter 'sendTestMailToAllReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendTestMailToAllReturn")]
        EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllResponse sendTestMailToAll(EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllResponse> sendTestMailToAllAsync(EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest request);
        
        // CODEGEN: Parameter 'getSendingStatusReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSendingStatusReturn")]
        EPiServer.Campaign.Extensions.MailingService.getSendingStatusResponse getSendingStatus(EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getSendingStatusResponse> getSendingStatusAsync(EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest request);
        
        // CODEGEN: Parameter 'getIdsInStatusReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getIdsInStatusReturn")]
        EPiServer.Campaign.Extensions.MailingService.getIdsInStatusResponse getIdsInStatus(EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getIdsInStatusResponse> getIdsInStatusAsync(EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getScheduleDateReturn")]
        System.DateTime getScheduleDate(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getScheduleDateReturn")]
        System.Threading.Tasks.Task<System.DateTime> getScheduleDateAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCreatedDateReturn")]
        System.DateTime getCreatedDate(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCreatedDateReturn")]
        System.Threading.Tasks.Task<System.DateTime> getCreatedDateAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFromNameReturn")]
        string getFromName(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFromNameReturn")]
        System.Threading.Tasks.Task<string> getFromNameAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFromEmailPrefixReturn")]
        string getFromEmailPrefix(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getFromEmailPrefixReturn")]
        System.Threading.Tasks.Task<string> getFromEmailPrefixAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setReplyToName(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setReplyToNameAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setReplyToAddress(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setReplyToAddressAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="encodeTrackingLinksReturn")]
        string encodeTrackingLinks(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="encodeTrackingLinksReturn")]
        System.Threading.Tasks.Task<string> encodeTrackingLinksAsync(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="decodeTrackingLinksReturn")]
        string decodeTrackingLinks(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="decodeTrackingLinksReturn")]
        System.Threading.Tasks.Task<string> decodeTrackingLinksAsync(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setVerpEnabled(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setVerpEnabledAsync(string in0, long in1, bool in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isVerpEnabledReturn")]
        bool isVerpEnabled(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isVerpEnabledReturn")]
        System.Threading.Tasks.Task<bool> isVerpEnabledAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="validateContentReturn")]
        string validateContent(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="validateContentReturn")]
        System.Threading.Tasks.Task<string> validateContentAsync(string in0, long in1, string in2, string in3);
        
        // CODEGEN: Parameter 'in2' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsResponse setAttachmentIds(EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsResponse> setAttachmentIdsAsync(EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest request);
        
        // CODEGEN: Parameter 'getAttachmentIdsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getAttachmentIdsReturn")]
        EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsResponse getAttachmentIds(EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsResponse> getAttachmentIdsAsync(EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setRecipientFilterId(string in0, long in1, long in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setRecipientFilterIdAsync(string in0, long in1, long in2);
        
        // CODEGEN: Parameter 'in2' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsResponse setRecipientFilterIds(EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsResponse> setRecipientFilterIdsAsync(EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getRecipientFilterIdReturn")]
        long getRecipientFilterId(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getRecipientFilterIdReturn")]
        System.Threading.Tasks.Task<long> getRecipientFilterIdAsync(string in0, long in1);
        
        // CODEGEN: Parameter 'getRecipientFilterIdsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getRecipientFilterIdsReturn")]
        EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsResponse getRecipientFilterIds(EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsResponse> getRecipientFilterIdsAsync(EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setContent(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setContentAsync(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setFrom(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setFromAsync(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCharsetReturn")]
        string getCharset(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCharsetReturn")]
        System.Threading.Tasks.Task<string> getCharsetAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setCharset(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setCharsetAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMimeTypeReturn")]
        string getMimeType(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getMimeTypeReturn")]
        System.Threading.Tasks.Task<string> getMimeTypeAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setSubject(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setSubjectAsync(string in0, long in1, string in2);
        
        // CODEGEN: Parameter 'getIdsReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getIdsReturn")]
        EPiServer.Campaign.Extensions.MailingService.getIdsResponse getIds(EPiServer.Campaign.Extensions.MailingService.getIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getIdsResponse> getIdsAsync(EPiServer.Campaign.Extensions.MailingService.getIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSubjectReturn")]
        string getSubject(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getSubjectReturn")]
        System.Threading.Tasks.Task<string> getSubjectAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDescriptionReturn")]
        string getDescription(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDescriptionReturn")]
        System.Threading.Tasks.Task<string> getDescriptionAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setDescription(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setDescriptionAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCountReturn")]
        int getCount(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getCountReturn")]
        System.Threading.Tasks.Task<int> getCountAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void cancel(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task cancelAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getStatusReturn")]
        string getStatus(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getStatusReturn")]
        System.Threading.Tasks.Task<string> getStatusAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setHeader(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setHeaderAsync(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void remove(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task removeAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setProperty(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setPropertyAsync(string in0, long in1, string in2, string in3);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPropertyReturn")]
        string getProperty(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPropertyReturn")]
        System.Threading.Tasks.Task<string> getPropertyAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getNameReturn")]
        string getName(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getNameReturn")]
        System.Threading.Tasks.Task<string> getNameAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void start(string in0, long in1, System.DateTime in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task startAsync(string in0, long in1, System.DateTime in2);
        
        // CODEGEN: Parameter 'in4' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="createReturn")]
        EPiServer.Campaign.Extensions.MailingService.createResponse create(EPiServer.Campaign.Extensions.MailingService.createRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.createResponse> createAsync(EPiServer.Campaign.Extensions.MailingService.createRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void resume(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task resumeAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void setName(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task setNameAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="copyReturn")]
        long copy(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="copyReturn")]
        System.Threading.Tasks.Task<long> copyAsync(string in0, long in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getContentReturn")]
        string getContent(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getContentReturn")]
        System.Threading.Tasks.Task<string> getContentAsync(string in0, long in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(EPiServer.Campaign.Extensions.MailingService.WebserviceException), Action="", Name="fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        string getVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        System.Threading.Tasks.Task<string> getVersionAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getHeader", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getHeaderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public string in2;
        
        public getHeaderRequest() {
        }
        
        public getHeaderRequest(string in0, long in1, string in2) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getHeaderResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getHeaderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getHeaderReturn")]
        public string[] getHeaderReturn;
        
        public getHeaderResponse() {
        }
        
        public getHeaderResponse(string[] getHeaderReturn) {
            this.getHeaderReturn = getHeaderReturn;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing")]
    public partial class ArrayOf_xsd_string : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item", Order=0)]
        public string[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDataSet", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getDataSetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public string in1;
        
        public getDataSetRequest() {
        }
        
        public getDataSetRequest(string in0, string in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDataSetResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getDataSetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getDataSetReturn")]
        public EPiServer.Campaign.Extensions.MailingService.ArrayOf_xsd_string[] getDataSetReturn;
        
        public getDataSetResponse() {
        }
        
        public getDataSetResponse(EPiServer.Campaign.Extensions.MailingService.ArrayOf_xsd_string[] getDataSetReturn) {
            this.getDataSetReturn = getDataSetReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getColumnNames", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getColumnNamesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public string in1;
        
        public getColumnNamesRequest() {
        }
        
        public getColumnNamesRequest(string in0, string in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getColumnNamesResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getColumnNamesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getColumnNamesReturn")]
        public string[] getColumnNamesReturn;
        
        public getColumnNamesResponse() {
        }
        
        public getColumnNamesResponse(string[] getColumnNamesReturn) {
            this.getColumnNamesReturn = getColumnNamesReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDataSetFlat", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getDataSetFlatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public string in1;
        
        public getDataSetFlatRequest() {
        }
        
        public getDataSetFlatRequest(string in0, string in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDataSetFlatResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getDataSetFlatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getDataSetFlatReturn")]
        public string[] getDataSetFlatReturn;
        
        public getDataSetFlatResponse() {
        }
        
        public getDataSetFlatResponse(string[] getDataSetFlatReturn) {
            this.getDataSetFlatReturn = getDataSetFlatReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRecipientListIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getRecipientListIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        public getRecipientListIdsRequest() {
        }
        
        public getRecipientListIdsRequest(string in0, long in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRecipientListIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getRecipientListIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getRecipientListIdsReturn")]
        public long[] getRecipientListIdsReturn;
        
        public getRecipientListIdsResponse() {
        }
        
        public getRecipientListIdsResponse(long[] getRecipientListIdsReturn) {
            this.getRecipientListIdsReturn = getRecipientListIdsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRecipientListIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class setRecipientListIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("in2")]
        public long[] in2;
        
        public setRecipientListIdsRequest() {
        }
        
        public setRecipientListIdsRequest(string in0, long in1, long[] in2) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRecipientListIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class setRecipientListIdsResponse {
        
        public setRecipientListIdsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMails", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class sendMailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public long in2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("in3")]
        public string[] in3;
        
        public sendMailsRequest() {
        }
        
        public sendMailsRequest(string in0, long in1, long in2, string[] in3) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
            this.in3 = in3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class sendMailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("sendMailsReturn")]
        public int[] sendMailsReturn;
        
        public sendMailsResponse() {
        }
        
        public sendMailsResponse(int[] sendMailsReturn) {
            this.sendMailsReturn = sendMailsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendTestMails", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class sendTestMailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public long in2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute("in3")]
        public string[] in3;
        
        public sendTestMailsRequest() {
        }
        
        public sendTestMailsRequest(string in0, long in1, long in2, string[] in3) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
            this.in3 = in3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendTestMailsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class sendTestMailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("sendTestMailsReturn")]
        public int[] sendTestMailsReturn;
        
        public sendTestMailsResponse() {
        }
        
        public sendTestMailsResponse(int[] sendTestMailsReturn) {
            this.sendTestMailsReturn = sendTestMailsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendTestMailToAll", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class sendTestMailToAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public long in2;
        
        public sendTestMailToAllRequest() {
        }
        
        public sendTestMailToAllRequest(string in0, long in1, long in2) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendTestMailToAllResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class sendTestMailToAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("sendTestMailToAllReturn")]
        public int[] sendTestMailToAllReturn;
        
        public sendTestMailToAllResponse() {
        }
        
        public sendTestMailToAllResponse(int[] sendTestMailToAllReturn) {
            this.sendTestMailToAllReturn = sendTestMailToAllReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSendingStatus", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getSendingStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public long in2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=3)]
        public string in3;
        
        public getSendingStatusRequest() {
        }
        
        public getSendingStatusRequest(string in0, long in1, long in2, string in3) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
            this.in3 = in3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSendingStatusResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getSendingStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getSendingStatusReturn")]
        public string[] getSendingStatusReturn;
        
        public getSendingStatusResponse() {
        }
        
        public getSendingStatusResponse(string[] getSendingStatusReturn) {
            this.getSendingStatusReturn = getSendingStatusReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getIdsInStatus", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getIdsInStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public string in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public string in2;
        
        public getIdsInStatusRequest() {
        }
        
        public getIdsInStatusRequest(string in0, string in1, string in2) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getIdsInStatusResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getIdsInStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getIdsInStatusReturn")]
        public long[] getIdsInStatusReturn;
        
        public getIdsInStatusResponse() {
        }
        
        public getIdsInStatusResponse(long[] getIdsInStatusReturn) {
            this.getIdsInStatusReturn = getIdsInStatusReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAttachmentIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class setAttachmentIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("in2")]
        public long[] in2;
        
        public setAttachmentIdsRequest() {
        }
        
        public setAttachmentIdsRequest(string in0, long in1, long[] in2) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAttachmentIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class setAttachmentIdsResponse {
        
        public setAttachmentIdsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAttachmentIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getAttachmentIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        public getAttachmentIdsRequest() {
        }
        
        public getAttachmentIdsRequest(string in0, long in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAttachmentIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getAttachmentIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getAttachmentIdsReturn")]
        public long[] getAttachmentIdsReturn;
        
        public getAttachmentIdsResponse() {
        }
        
        public getAttachmentIdsResponse(long[] getAttachmentIdsReturn) {
            this.getAttachmentIdsReturn = getAttachmentIdsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRecipientFilterIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class setRecipientFilterIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("in2")]
        public long[] in2;
        
        public setRecipientFilterIdsRequest() {
        }
        
        public setRecipientFilterIdsRequest(string in0, long in1, long[] in2) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRecipientFilterIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class setRecipientFilterIdsResponse {
        
        public setRecipientFilterIdsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRecipientFilterIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getRecipientFilterIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public long in1;
        
        public getRecipientFilterIdsRequest() {
        }
        
        public getRecipientFilterIdsRequest(string in0, long in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRecipientFilterIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getRecipientFilterIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getRecipientFilterIdsReturn")]
        public long[] getRecipientFilterIdsReturn;
        
        public getRecipientFilterIdsResponse() {
        }
        
        public getRecipientFilterIdsResponse(long[] getRecipientFilterIdsReturn) {
            this.getRecipientFilterIdsReturn = getRecipientFilterIdsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getIds", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getIdsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public string in1;
        
        public getIdsRequest() {
        }
        
        public getIdsRequest(string in0, string in1) {
            this.in0 = in0;
            this.in1 = in1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getIdsResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class getIdsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("getIdsReturn")]
        public long[] getIdsReturn;
        
        public getIdsResponse() {
        }
        
        public getIdsResponse(long[] getIdsReturn) {
            this.getIdsReturn = getIdsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="create", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class createRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public string in0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=1)]
        public string in1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=2)]
        public string in2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=3)]
        public string in3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute("in4")]
        public long[] in4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=5)]
        public string in5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=6)]
        public string in6;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=7)]
        public string in7;
        
        public createRequest() {
        }
        
        public createRequest(string in0, string in1, string in2, string in3, long[] in4, string in5, string in6, string in7) {
            this.in0 = in0;
            this.in1 = in1;
            this.in2 = in2;
            this.in3 = in3;
            this.in4 = in4;
            this.in5 = in5;
            this.in6 = in6;
            this.in7 = in7;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createResponse", WrapperNamespace="urn:api.broadmail.de/soap11/Mailing", IsWrapped=true)]
    public partial class createResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:api.broadmail.de/soap11/Mailing", Order=0)]
        public long createReturn;
        
        public createResponse() {
        }
        
        public createResponse(long createReturn) {
            this.createReturn = createReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MailingWebserviceChannel : EPiServer.Campaign.Extensions.MailingService.MailingWebservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailingWebserviceClient : System.ServiceModel.ClientBase<EPiServer.Campaign.Extensions.MailingService.MailingWebservice>, EPiServer.Campaign.Extensions.MailingService.MailingWebservice {
        
        public MailingWebserviceClient() {
        }
        
        public MailingWebserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MailingWebserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailingWebserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailingWebserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getHeaderResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getHeader(EPiServer.Campaign.Extensions.MailingService.getHeaderRequest request) {
            return base.Channel.getHeader(request);
        }
        
        public string[] getHeader(string in0, long in1, string in2) {
            EPiServer.Campaign.Extensions.MailingService.getHeaderRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getHeaderRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            EPiServer.Campaign.Extensions.MailingService.getHeaderResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getHeader(inValue);
            return retVal.getHeaderReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getHeaderResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getHeaderAsync(EPiServer.Campaign.Extensions.MailingService.getHeaderRequest request) {
            return base.Channel.getHeaderAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getHeaderResponse> getHeaderAsync(string in0, long in1, string in2) {
            EPiServer.Campaign.Extensions.MailingService.getHeaderRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getHeaderRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getHeaderAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getDataSetResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getDataSet(EPiServer.Campaign.Extensions.MailingService.getDataSetRequest request) {
            return base.Channel.getDataSet(request);
        }
        
        public EPiServer.Campaign.Extensions.MailingService.ArrayOf_xsd_string[] getDataSet(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getDataSetRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getDataSetRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getDataSetResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getDataSet(inValue);
            return retVal.getDataSetReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getDataSetResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getDataSetAsync(EPiServer.Campaign.Extensions.MailingService.getDataSetRequest request) {
            return base.Channel.getDataSetAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getDataSetResponse> getDataSetAsync(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getDataSetRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getDataSetRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getDataSetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getColumnNamesResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getColumnNames(EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest request) {
            return base.Channel.getColumnNames(request);
        }
        
        public string[] getColumnNames(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getColumnNamesResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getColumnNames(inValue);
            return retVal.getColumnNamesReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getColumnNamesResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getColumnNamesAsync(EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest request) {
            return base.Channel.getColumnNamesAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getColumnNamesResponse> getColumnNamesAsync(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getColumnNamesRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getColumnNamesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getDataSetFlatResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getDataSetFlat(EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest request) {
            return base.Channel.getDataSetFlat(request);
        }
        
        public string[] getDataSetFlat(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getDataSetFlatResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getDataSetFlat(inValue);
            return retVal.getDataSetFlatReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getDataSetFlatResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getDataSetFlatAsync(EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest request) {
            return base.Channel.getDataSetFlatAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getDataSetFlatResponse> getDataSetFlatAsync(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getDataSetFlatRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getDataSetFlatAsync(inValue);
        }
        
        public void setMimeType(string in0, long in1, string in2) {
            base.Channel.setMimeType(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setMimeTypeAsync(string in0, long in1, string in2) {
            return base.Channel.setMimeTypeAsync(in0, in1, in2);
        }
        
        public void setDefaultRecipientFilterEnabled(string in0, long in1, bool in2) {
            base.Channel.setDefaultRecipientFilterEnabled(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setDefaultRecipientFilterEnabledAsync(string in0, long in1, bool in2) {
            return base.Channel.setDefaultRecipientFilterEnabledAsync(in0, in1, in2);
        }
        
        public bool isDefaultRecipientFilterEnabled(string in0, long in1) {
            return base.Channel.isDefaultRecipientFilterEnabled(in0, in1);
        }
        
        public System.Threading.Tasks.Task<bool> isDefaultRecipientFilterEnabledAsync(string in0, long in1) {
            return base.Channel.isDefaultRecipientFilterEnabledAsync(in0, in1);
        }
        
        public void setOpenTrackingEnabled(string in0, long in1, bool in2) {
            base.Channel.setOpenTrackingEnabled(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setOpenTrackingEnabledAsync(string in0, long in1, bool in2) {
            return base.Channel.setOpenTrackingEnabledAsync(in0, in1, in2);
        }
        
        public bool isOpenTrackingEnabled(string in0, long in1) {
            return base.Channel.isOpenTrackingEnabled(in0, in1);
        }
        
        public System.Threading.Tasks.Task<bool> isOpenTrackingEnabledAsync(string in0, long in1) {
            return base.Channel.isOpenTrackingEnabledAsync(in0, in1);
        }
        
        public void setClickTrackingEnabled(string in0, long in1, string in2, bool in3) {
            base.Channel.setClickTrackingEnabled(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setClickTrackingEnabledAsync(string in0, long in1, string in2, bool in3) {
            return base.Channel.setClickTrackingEnabledAsync(in0, in1, in2, in3);
        }
        
        public bool isClickTrackingEnabled(string in0, long in1, string in2) {
            return base.Channel.isClickTrackingEnabled(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<bool> isClickTrackingEnabledAsync(string in0, long in1, string in2) {
            return base.Channel.isClickTrackingEnabledAsync(in0, in1, in2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getRecipientListIds(EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest request) {
            return base.Channel.getRecipientListIds(request);
        }
        
        public long[] getRecipientListIds(string in0, long in1) {
            EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getRecipientListIds(inValue);
            return retVal.getRecipientListIdsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getRecipientListIdsAsync(EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest request) {
            return base.Channel.getRecipientListIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsResponse> getRecipientListIdsAsync(string in0, long in1) {
            EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getRecipientListIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getRecipientListIdsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.setRecipientListIds(EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest request) {
            return base.Channel.setRecipientListIds(request);
        }
        
        public void setRecipientListIds(string in0, long in1, long[] in2) {
            EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).setRecipientListIds(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.setRecipientListIdsAsync(EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest request) {
            return base.Channel.setRecipientListIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsResponse> setRecipientListIdsAsync(string in0, long in1, long[] in2) {
            EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.setRecipientListIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).setRecipientListIdsAsync(inValue);
        }
        
        public float getMaxRecipients(string in0, long in1) {
            return base.Channel.getMaxRecipients(in0, in1);
        }
        
        public System.Threading.Tasks.Task<float> getMaxRecipientsAsync(string in0, long in1) {
            return base.Channel.getMaxRecipientsAsync(in0, in1);
        }
        
        public bool isMaxRecipientsRandomOrder(string in0, long in1) {
            return base.Channel.isMaxRecipientsRandomOrder(in0, in1);
        }
        
        public System.Threading.Tasks.Task<bool> isMaxRecipientsRandomOrderAsync(string in0, long in1) {
            return base.Channel.isMaxRecipientsRandomOrderAsync(in0, in1);
        }
        
        public void setMaxRecipients(string in0, long in1, int in2, bool in3) {
            base.Channel.setMaxRecipients(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setMaxRecipientsAsync(string in0, long in1, int in2, bool in3) {
            return base.Channel.setMaxRecipientsAsync(in0, in1, in2, in3);
        }
        
        public void setMaxRecipientsPercentage(string in0, long in1, float in2, bool in3) {
            base.Channel.setMaxRecipientsPercentage(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setMaxRecipientsPercentageAsync(string in0, long in1, float in2, bool in3) {
            return base.Channel.setMaxRecipientsPercentageAsync(in0, in1, in2, in3);
        }
        
        public bool isMaxRecipientsPercentage(string in0, long in1) {
            return base.Channel.isMaxRecipientsPercentage(in0, in1);
        }
        
        public System.Threading.Tasks.Task<bool> isMaxRecipientsPercentageAsync(string in0, long in1) {
            return base.Channel.isMaxRecipientsPercentageAsync(in0, in1);
        }
        
        public int getMaxMailsPerHour(string in0, long in1) {
            return base.Channel.getMaxMailsPerHour(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getMaxMailsPerHourAsync(string in0, long in1) {
            return base.Channel.getMaxMailsPerHourAsync(in0, in1);
        }
        
        public void setMaxMailsPerHour(string in0, long in1, int in2) {
            base.Channel.setMaxMailsPerHour(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setMaxMailsPerHourAsync(string in0, long in1, int in2) {
            return base.Channel.setMaxMailsPerHourAsync(in0, in1, in2);
        }
        
        public int getOverallRecipientCount(string in0, long in1) {
            return base.Channel.getOverallRecipientCount(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getOverallRecipientCountAsync(string in0, long in1) {
            return base.Channel.getOverallRecipientCountAsync(in0, in1);
        }
        
        public int getSentRecipientCount(string in0, long in1) {
            return base.Channel.getSentRecipientCount(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getSentRecipientCountAsync(string in0, long in1) {
            return base.Channel.getSentRecipientCountAsync(in0, in1);
        }
        
        public int getFailedRecipientCount(string in0, long in1) {
            return base.Channel.getFailedRecipientCount(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getFailedRecipientCountAsync(string in0, long in1) {
            return base.Channel.getFailedRecipientCountAsync(in0, in1);
        }
        
        public int getPredictedRecipientCount(string in0, long in1) {
            return base.Channel.getPredictedRecipientCount(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getPredictedRecipientCountAsync(string in0, long in1) {
            return base.Channel.getPredictedRecipientCountAsync(in0, in1);
        }
        
        public void pause(string in0, long in1) {
            base.Channel.pause(in0, in1);
        }
        
        public System.Threading.Tasks.Task pauseAsync(string in0, long in1) {
            return base.Channel.pauseAsync(in0, in1);
        }
        
        public void restart(string in0, long in1) {
            base.Channel.restart(in0, in1);
        }
        
        public System.Threading.Tasks.Task restartAsync(string in0, long in1) {
            return base.Channel.restartAsync(in0, in1);
        }
        
        public System.DateTime getSendingStartedDate(string in0, long in1) {
            return base.Channel.getSendingStartedDate(in0, in1);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> getSendingStartedDateAsync(string in0, long in1) {
            return base.Channel.getSendingStartedDateAsync(in0, in1);
        }
        
        public System.DateTime getSendingFinishedDate(string in0, long in1) {
            return base.Channel.getSendingFinishedDate(in0, in1);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> getSendingFinishedDateAsync(string in0, long in1) {
            return base.Channel.getSendingFinishedDateAsync(in0, in1);
        }
        
        public int sendMail(string in0, long in1, long in2, string in3) {
            return base.Channel.sendMail(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task<int> sendMailAsync(string in0, long in1, long in2, string in3) {
            return base.Channel.sendMailAsync(in0, in1, in2, in3);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.sendMailsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.sendMails(EPiServer.Campaign.Extensions.MailingService.sendMailsRequest request) {
            return base.Channel.sendMails(request);
        }
        
        public int[] sendMails(string in0, long in1, long in2, string[] in3) {
            EPiServer.Campaign.Extensions.MailingService.sendMailsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.sendMailsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            EPiServer.Campaign.Extensions.MailingService.sendMailsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).sendMails(inValue);
            return retVal.sendMailsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendMailsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.sendMailsAsync(EPiServer.Campaign.Extensions.MailingService.sendMailsRequest request) {
            return base.Channel.sendMailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendMailsResponse> sendMailsAsync(string in0, long in1, long in2, string[] in3) {
            EPiServer.Campaign.Extensions.MailingService.sendMailsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.sendMailsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).sendMailsAsync(inValue);
        }
        
        public int sendTestMail(string in0, long in1, long in2, string in3) {
            return base.Channel.sendTestMail(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task<int> sendTestMailAsync(string in0, long in1, long in2, string in3) {
            return base.Channel.sendTestMailAsync(in0, in1, in2, in3);
        }
        
        public int sendTestMail2(string in0, long in1, string in2, long in3, string in4) {
            return base.Channel.sendTestMail2(in0, in1, in2, in3, in4);
        }
        
        public System.Threading.Tasks.Task<int> sendTestMail2Async(string in0, long in1, string in2, long in3, string in4) {
            return base.Channel.sendTestMail2Async(in0, in1, in2, in3, in4);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.sendTestMailsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.sendTestMails(EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest request) {
            return base.Channel.sendTestMails(request);
        }
        
        public int[] sendTestMails(string in0, long in1, long in2, string[] in3) {
            EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            EPiServer.Campaign.Extensions.MailingService.sendTestMailsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).sendTestMails(inValue);
            return retVal.sendTestMailsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendTestMailsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.sendTestMailsAsync(EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest request) {
            return base.Channel.sendTestMailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendTestMailsResponse> sendTestMailsAsync(string in0, long in1, long in2, string[] in3) {
            EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.sendTestMailsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).sendTestMailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.sendTestMailToAll(EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest request) {
            return base.Channel.sendTestMailToAll(request);
        }
        
        public int[] sendTestMailToAll(string in0, long in1, long in2) {
            EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest inValue = new EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).sendTestMailToAll(inValue);
            return retVal.sendTestMailToAllReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.sendTestMailToAllAsync(EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest request) {
            return base.Channel.sendTestMailToAllAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllResponse> sendTestMailToAllAsync(string in0, long in1, long in2) {
            EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest inValue = new EPiServer.Campaign.Extensions.MailingService.sendTestMailToAllRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).sendTestMailToAllAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getSendingStatusResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getSendingStatus(EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest request) {
            return base.Channel.getSendingStatus(request);
        }
        
        public string[] getSendingStatus(string in0, long in1, long in2, string in3) {
            EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            EPiServer.Campaign.Extensions.MailingService.getSendingStatusResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getSendingStatus(inValue);
            return retVal.getSendingStatusReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getSendingStatusResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getSendingStatusAsync(EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest request) {
            return base.Channel.getSendingStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getSendingStatusResponse> getSendingStatusAsync(string in0, long in1, long in2, string in3) {
            EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getSendingStatusRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getSendingStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getIdsInStatusResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getIdsInStatus(EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest request) {
            return base.Channel.getIdsInStatus(request);
        }
        
        public long[] getIdsInStatus(string in0, string in1, string in2) {
            EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            EPiServer.Campaign.Extensions.MailingService.getIdsInStatusResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getIdsInStatus(inValue);
            return retVal.getIdsInStatusReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getIdsInStatusResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getIdsInStatusAsync(EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest request) {
            return base.Channel.getIdsInStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getIdsInStatusResponse> getIdsInStatusAsync(string in0, string in1, string in2) {
            EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getIdsInStatusRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getIdsInStatusAsync(inValue);
        }
        
        public System.DateTime getScheduleDate(string in0, long in1) {
            return base.Channel.getScheduleDate(in0, in1);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> getScheduleDateAsync(string in0, long in1) {
            return base.Channel.getScheduleDateAsync(in0, in1);
        }
        
        public System.DateTime getCreatedDate(string in0, long in1) {
            return base.Channel.getCreatedDate(in0, in1);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> getCreatedDateAsync(string in0, long in1) {
            return base.Channel.getCreatedDateAsync(in0, in1);
        }
        
        public string getFromName(string in0, long in1) {
            return base.Channel.getFromName(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getFromNameAsync(string in0, long in1) {
            return base.Channel.getFromNameAsync(in0, in1);
        }
        
        public string getFromEmailPrefix(string in0, long in1) {
            return base.Channel.getFromEmailPrefix(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getFromEmailPrefixAsync(string in0, long in1) {
            return base.Channel.getFromEmailPrefixAsync(in0, in1);
        }
        
        public void setReplyToName(string in0, long in1, string in2) {
            base.Channel.setReplyToName(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setReplyToNameAsync(string in0, long in1, string in2) {
            return base.Channel.setReplyToNameAsync(in0, in1, in2);
        }
        
        public void setReplyToAddress(string in0, long in1, string in2) {
            base.Channel.setReplyToAddress(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setReplyToAddressAsync(string in0, long in1, string in2) {
            return base.Channel.setReplyToAddressAsync(in0, in1, in2);
        }
        
        public string encodeTrackingLinks(string in0, long in1, string in2, string in3) {
            return base.Channel.encodeTrackingLinks(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task<string> encodeTrackingLinksAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.encodeTrackingLinksAsync(in0, in1, in2, in3);
        }
        
        public string decodeTrackingLinks(string in0, long in1, string in2, string in3) {
            return base.Channel.decodeTrackingLinks(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task<string> decodeTrackingLinksAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.decodeTrackingLinksAsync(in0, in1, in2, in3);
        }
        
        public void setVerpEnabled(string in0, long in1, bool in2) {
            base.Channel.setVerpEnabled(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setVerpEnabledAsync(string in0, long in1, bool in2) {
            return base.Channel.setVerpEnabledAsync(in0, in1, in2);
        }
        
        public bool isVerpEnabled(string in0, long in1) {
            return base.Channel.isVerpEnabled(in0, in1);
        }
        
        public System.Threading.Tasks.Task<bool> isVerpEnabledAsync(string in0, long in1) {
            return base.Channel.isVerpEnabledAsync(in0, in1);
        }
        
        public string validateContent(string in0, long in1, string in2, string in3) {
            return base.Channel.validateContent(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task<string> validateContentAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.validateContentAsync(in0, in1, in2, in3);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.setAttachmentIds(EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest request) {
            return base.Channel.setAttachmentIds(request);
        }
        
        public void setAttachmentIds(string in0, long in1, long[] in2) {
            EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).setAttachmentIds(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.setAttachmentIdsAsync(EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest request) {
            return base.Channel.setAttachmentIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsResponse> setAttachmentIdsAsync(string in0, long in1, long[] in2) {
            EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.setAttachmentIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).setAttachmentIdsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getAttachmentIds(EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest request) {
            return base.Channel.getAttachmentIds(request);
        }
        
        public long[] getAttachmentIds(string in0, long in1) {
            EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getAttachmentIds(inValue);
            return retVal.getAttachmentIdsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getAttachmentIdsAsync(EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest request) {
            return base.Channel.getAttachmentIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsResponse> getAttachmentIdsAsync(string in0, long in1) {
            EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getAttachmentIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getAttachmentIdsAsync(inValue);
        }
        
        public void setRecipientFilterId(string in0, long in1, long in2) {
            base.Channel.setRecipientFilterId(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setRecipientFilterIdAsync(string in0, long in1, long in2) {
            return base.Channel.setRecipientFilterIdAsync(in0, in1, in2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.setRecipientFilterIds(EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest request) {
            return base.Channel.setRecipientFilterIds(request);
        }
        
        public void setRecipientFilterIds(string in0, long in1, long[] in2) {
            EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).setRecipientFilterIds(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.setRecipientFilterIdsAsync(EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest request) {
            return base.Channel.setRecipientFilterIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsResponse> setRecipientFilterIdsAsync(string in0, long in1, long[] in2) {
            EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.setRecipientFilterIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).setRecipientFilterIdsAsync(inValue);
        }
        
        public long getRecipientFilterId(string in0, long in1) {
            return base.Channel.getRecipientFilterId(in0, in1);
        }
        
        public System.Threading.Tasks.Task<long> getRecipientFilterIdAsync(string in0, long in1) {
            return base.Channel.getRecipientFilterIdAsync(in0, in1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getRecipientFilterIds(EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest request) {
            return base.Channel.getRecipientFilterIds(request);
        }
        
        public long[] getRecipientFilterIds(string in0, long in1) {
            EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getRecipientFilterIds(inValue);
            return retVal.getRecipientFilterIdsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getRecipientFilterIdsAsync(EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest request) {
            return base.Channel.getRecipientFilterIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsResponse> getRecipientFilterIdsAsync(string in0, long in1) {
            EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getRecipientFilterIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getRecipientFilterIdsAsync(inValue);
        }
        
        public void setContent(string in0, long in1, string in2, string in3) {
            base.Channel.setContent(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setContentAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.setContentAsync(in0, in1, in2, in3);
        }
        
        public void setFrom(string in0, long in1, string in2, string in3) {
            base.Channel.setFrom(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setFromAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.setFromAsync(in0, in1, in2, in3);
        }
        
        public string getCharset(string in0, long in1) {
            return base.Channel.getCharset(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getCharsetAsync(string in0, long in1) {
            return base.Channel.getCharsetAsync(in0, in1);
        }
        
        public void setCharset(string in0, long in1, string in2) {
            base.Channel.setCharset(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setCharsetAsync(string in0, long in1, string in2) {
            return base.Channel.setCharsetAsync(in0, in1, in2);
        }
        
        public string getMimeType(string in0, long in1) {
            return base.Channel.getMimeType(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getMimeTypeAsync(string in0, long in1) {
            return base.Channel.getMimeTypeAsync(in0, in1);
        }
        
        public void setSubject(string in0, long in1, string in2) {
            base.Channel.setSubject(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setSubjectAsync(string in0, long in1, string in2) {
            return base.Channel.setSubjectAsync(in0, in1, in2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.getIdsResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getIds(EPiServer.Campaign.Extensions.MailingService.getIdsRequest request) {
            return base.Channel.getIds(request);
        }
        
        public long[] getIds(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            EPiServer.Campaign.Extensions.MailingService.getIdsResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getIds(inValue);
            return retVal.getIdsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getIdsResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.getIdsAsync(EPiServer.Campaign.Extensions.MailingService.getIdsRequest request) {
            return base.Channel.getIdsAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.getIdsResponse> getIdsAsync(string in0, string in1) {
            EPiServer.Campaign.Extensions.MailingService.getIdsRequest inValue = new EPiServer.Campaign.Extensions.MailingService.getIdsRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).getIdsAsync(inValue);
        }
        
        public string getSubject(string in0, long in1) {
            return base.Channel.getSubject(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getSubjectAsync(string in0, long in1) {
            return base.Channel.getSubjectAsync(in0, in1);
        }
        
        public string getDescription(string in0, long in1) {
            return base.Channel.getDescription(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getDescriptionAsync(string in0, long in1) {
            return base.Channel.getDescriptionAsync(in0, in1);
        }
        
        public void setDescription(string in0, long in1, string in2) {
            base.Channel.setDescription(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setDescriptionAsync(string in0, long in1, string in2) {
            return base.Channel.setDescriptionAsync(in0, in1, in2);
        }
        
        public int getCount(string in0, string in1) {
            return base.Channel.getCount(in0, in1);
        }
        
        public System.Threading.Tasks.Task<int> getCountAsync(string in0, string in1) {
            return base.Channel.getCountAsync(in0, in1);
        }
        
        public void cancel(string in0, long in1) {
            base.Channel.cancel(in0, in1);
        }
        
        public System.Threading.Tasks.Task cancelAsync(string in0, long in1) {
            return base.Channel.cancelAsync(in0, in1);
        }
        
        public string getStatus(string in0, long in1) {
            return base.Channel.getStatus(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getStatusAsync(string in0, long in1) {
            return base.Channel.getStatusAsync(in0, in1);
        }
        
        public void setHeader(string in0, long in1, string in2, string in3) {
            base.Channel.setHeader(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setHeaderAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.setHeaderAsync(in0, in1, in2, in3);
        }
        
        public void remove(string in0, long in1) {
            base.Channel.remove(in0, in1);
        }
        
        public System.Threading.Tasks.Task removeAsync(string in0, long in1) {
            return base.Channel.removeAsync(in0, in1);
        }
        
        public void setProperty(string in0, long in1, string in2, string in3) {
            base.Channel.setProperty(in0, in1, in2, in3);
        }
        
        public System.Threading.Tasks.Task setPropertyAsync(string in0, long in1, string in2, string in3) {
            return base.Channel.setPropertyAsync(in0, in1, in2, in3);
        }
        
        public string getProperty(string in0, long in1, string in2) {
            return base.Channel.getProperty(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> getPropertyAsync(string in0, long in1, string in2) {
            return base.Channel.getPropertyAsync(in0, in1, in2);
        }
        
        public string getName(string in0, long in1) {
            return base.Channel.getName(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> getNameAsync(string in0, long in1) {
            return base.Channel.getNameAsync(in0, in1);
        }
        
        public void start(string in0, long in1, System.DateTime in2) {
            base.Channel.start(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task startAsync(string in0, long in1, System.DateTime in2) {
            return base.Channel.startAsync(in0, in1, in2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EPiServer.Campaign.Extensions.MailingService.createResponse EPiServer.Campaign.Extensions.MailingService.MailingWebservice.create(EPiServer.Campaign.Extensions.MailingService.createRequest request) {
            return base.Channel.create(request);
        }
        
        public long create(string in0, string in1, string in2, string in3, long[] in4, string in5, string in6, string in7) {
            EPiServer.Campaign.Extensions.MailingService.createRequest inValue = new EPiServer.Campaign.Extensions.MailingService.createRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            inValue.in4 = in4;
            inValue.in5 = in5;
            inValue.in6 = in6;
            inValue.in7 = in7;
            EPiServer.Campaign.Extensions.MailingService.createResponse retVal = ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).create(inValue);
            return retVal.createReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.createResponse> EPiServer.Campaign.Extensions.MailingService.MailingWebservice.createAsync(EPiServer.Campaign.Extensions.MailingService.createRequest request) {
            return base.Channel.createAsync(request);
        }
        
        public System.Threading.Tasks.Task<EPiServer.Campaign.Extensions.MailingService.createResponse> createAsync(string in0, string in1, string in2, string in3, long[] in4, string in5, string in6, string in7) {
            EPiServer.Campaign.Extensions.MailingService.createRequest inValue = new EPiServer.Campaign.Extensions.MailingService.createRequest();
            inValue.in0 = in0;
            inValue.in1 = in1;
            inValue.in2 = in2;
            inValue.in3 = in3;
            inValue.in4 = in4;
            inValue.in5 = in5;
            inValue.in6 = in6;
            inValue.in7 = in7;
            return ((EPiServer.Campaign.Extensions.MailingService.MailingWebservice)(this)).createAsync(inValue);
        }
        
        public void resume(string in0, long in1) {
            base.Channel.resume(in0, in1);
        }
        
        public System.Threading.Tasks.Task resumeAsync(string in0, long in1) {
            return base.Channel.resumeAsync(in0, in1);
        }
        
        public void setName(string in0, long in1, string in2) {
            base.Channel.setName(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task setNameAsync(string in0, long in1, string in2) {
            return base.Channel.setNameAsync(in0, in1, in2);
        }
        
        public long copy(string in0, long in1) {
            return base.Channel.copy(in0, in1);
        }
        
        public System.Threading.Tasks.Task<long> copyAsync(string in0, long in1) {
            return base.Channel.copyAsync(in0, in1);
        }
        
        public string getContent(string in0, long in1, string in2) {
            return base.Channel.getContent(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> getContentAsync(string in0, long in1, string in2) {
            return base.Channel.getContentAsync(in0, in1, in2);
        }
        
        public string getVersion() {
            return base.Channel.getVersion();
        }
        
        public System.Threading.Tasks.Task<string> getVersionAsync() {
            return base.Channel.getVersionAsync();
        }
    }
}
