@model EPiServer.Reference.Commerce.Site.Features.VirtualProducts.ViewModels.VirtualProductViewModel
@using EPiServer.Security
@using Mediachase.Commerce.Security
<div class="col-main">
    <div class="modal-content jsProductDetails">

        <div class="modal-header">
            <p>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </p>
        </div>

        <div class="modal-body row ">

            <div class="col-xs-12 col-sm-4 col--leading">
                <div id="product-carousel" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner" role="listbox">
                        <div class="item active" data-slide-number="0">
                            <img src="@Model.Images.ElementAt(0)" alt="@Model.Product.Code" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-sm-8 product-info container--gutter margin-bottom-md">
                <div class="row">
                    <div class="col-xs-12">
                        <h1>@Html.PropertyFor(x => x.Variant.DisplayName)</h1>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        <h2 class="product-brand">@Html.PropertyFor(x => x.Product.Brand)</h2>
                    </div>
                    <div class="col-xs-12 col-sm-6">
                        @if (Model.DiscountedPrice < Model.ListingPrice)
                        {
                            <h4 class="product-price price--original">@Model.ListingPrice.ToString()</h4>
                            <h4 class="product-price--discount"><span>@Model.DiscountedPrice.ToString()</span></h4>
                        }
                        else
                        {
                            <h4 class="product-price">@Model.DiscountedPrice.ToString()</h4>
                        }
                    </div>
                </div>
                <div class="row">
                    @using (Html.BeginForm("SelectVariant", "Product", FormMethod.Post, new { @class = "product-details__form clearfix container--gutter-inner container--gutter-outer margin-top-sm" }))
                    {
                        @Html.Hidden("useQuickview", true)
                        if (Model.Colors != null && Model.Colors.Count > 0)
                        {
                            <div class="col-xs-12 col-sm-6">
                                <label for="Color">@Html.Translate("/ProductPage/VariationSelection/Color")</label>
                                @Html.DropDownListFor(x => x.Color, Model.Colors, new { @class = "form-control jsVariationSwitch" })
                            </div>
                        }
                        if (Model.Sizes != null && Model.Sizes.Count > 0)
                        {
                            <div class="col-xs-12 col-sm-6">
                                <label for="Size">@Html.Translate("/ProductPage/VariationSelection/Size")</label>
                                @Html.DropDownListFor(x => x.Size, Model.Sizes, new { @class = "form-control jsVariationSwitch" })
                            </div>
                        }
                    }
                </div>
                <div class="row">
                    <div class="col-md-7 container--flex container--flex-half">
                        @if (Model.IsAvailable && !(bool)ViewData["IsReadOnly"])
                        {
                            using (Html.BeginForm("AddToCart", "Cart", FormMethod.Post, new { @class = "form-inline", data_container = "headerCart" }))
                            {
                                @*<div class="row margin-v-md">
                                    @Html.Partial("_Stores", Model.Stores)
                                </div>*@
                                @Html.Hidden("code", Model.Variant.Code)
                                <button type="submit" role="button" class="button-dark jsAddToCart" data-container="MiniCart">
                                    <span>
                                        @Html.Translate("/Product/Button/AddToCart")
                                    </span>
                                </button>
                            }
                            if (User.Identity.IsAuthenticated)
                            {
                                using (Html.BeginForm("AddToCart", "WishList", FormMethod.Post, new { @class = "form-inline jsAddToWishList", data_container = "WishListMiniCart" }))
                                {
                                    @Html.Hidden("code", Model.Variant.Code)
                                    <button type="submit" role="button" class="button-dark jsAddToCart" data-container="WishListMiniCart"><span class="glyphicon glyphicon-heart"></span>
                                      Add to @Model.WishlistLabel
                                    </button>
                                }
                            }
                        }
                    </div>
                    <div id="CartWarningMessage" class="col-md-5 col-xs-12 alert alert-danger pull-right" hidden>
                        <button type="button" class="close" data-hide="alert">&times;</button>
                        <span class="warning-message"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>