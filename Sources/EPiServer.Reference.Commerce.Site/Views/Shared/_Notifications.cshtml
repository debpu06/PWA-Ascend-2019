@using EPiServer
@using EPiServer.ServiceLocation
@using Mediachase.Commerce.Customers;
@model EPiServer.Reference.Commerce.Site.Features.Shared.Models.BaseStartPage

@if (Request.IsAuthenticated)
{
    var notifications = Model.Notifications != null ? Model.Notifications.FilteredItems.Select(o => ServiceLocator.Current.GetInstance<IContentLoader>().Get<NotificationBlock>(o.ContentLink)) : new List<NotificationBlock>();
    var email = CustomerContext.Current.CurrentContact != null ? CustomerContext.Current.CurrentContact.Email : "";
    <div class="notification-container" email="@email">
        @foreach (var notification in notifications)
        {
            if (notification.Acknowledgements == null
                 || notification.Acknowledgements.FirstOrDefault(o => o.Email.Equals(email, StringComparison.OrdinalIgnoreCase)) == null
                 || notification.Acknowledgements.FirstOrDefault(o => o.Email.Equals(email, StringComparison.OrdinalIgnoreCase) && o.Acknowledged == false) != null)
            {
                <div class="alert alert-primary notification-message" role="alert" id="@((notification as IContent).ContentGuid)">
                    <span>@notification.Message</span>
                    <button type="button" class="close notification-acknowledged" data-dismiss="alert" aria-label="Close" id="@((notification as IContent).ContentGuid)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
        }
    </div>
}

