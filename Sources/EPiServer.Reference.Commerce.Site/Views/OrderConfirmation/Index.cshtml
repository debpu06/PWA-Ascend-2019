@using EPiServer.Commerce.Order
@using EPiServer.Commerce.Order.Internal
@using EPiServer.Reference.Commerce.Site.Features.Shared.Extensions
@using EPiServer.Reference.Commerce.Site.Features.Checkout.Pages
@using Mediachase.Commerce
@model EPiServer.Reference.Commerce.Site.Features.Checkout.ViewModels.OrderConfirmationViewModel<OrderConfirmationPage>
@{
    Layout = null;
    string fontFamily = @"font-family: ""Helvetica Neue"", Helvetica, Arial, sans-serif; font-size: 10pt; line-height: 1.5em;";
    string horizontalLineStyle = "border-top: 1px solid #c7c7c7;";
    string cellPadding = "padding: 5px;";
}
<div class="row checkout container--gutter">
    <div class="col-md-12">
        <h1>@Html.PropertyFor(x => x.CurrentContent.Title)</h1>
        <h2>@Html.Translate("/OrderHistory/Labels/OrderID") @Model.OrderId</h2>
        @Html.Translate("/OrderHistory/Labels/OrderDate") @Model.Created
        @if (Model.NotificationMessage != null)
        {
            <div class="alert alert-danger">
                @Model.NotificationMessage
            </div>
        }
    </div>
</div>

<section class="main-container container--gutter">

    <div class="main container container-fluid">
        <div class="row checkout">

            <div class="col-md-12">
                @Html.PropertyFor(x => x.CurrentContent.Body)

                @if (Model.HasOrder)
                {
                    if (Model.FileUrls.Any())
                    {
                        <p><b>Click to links below to download your file</b></p>
                        <table style="width:100%;vertical-align: top;border: 1px solid; @fontFamily">
                            <thead>
                                <tr>
                                    <td style="@cellPadding">@Html.Translate("/OrderConfirmation/Labels/Product")</td>
                                    <td style="@cellPadding">Download</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var url in Model.FileUrls)
                                {
                                    <tr>
                                        <td style="@horizontalLineStyle @cellPadding">@url.Keys.FirstOrDefault()</td>
                                        <td style="@horizontalLineStyle @cellPadding">@url.Values.FirstOrDefault()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />
                    }
                    if (Model.Keys.Any())
                    {
                        <p><b>See below for your purchased keys:</b></p>
                        <table style="width:100%; vertical-align: top;border: 1px solid; @fontFamily">
                            <thead>
                                <tr>
                                    <td style="@cellPadding">@Html.Translate("/OrderConfirmation/Labels/Product")</td>
                                    <td style="@cellPadding">Key</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var key in Model.Keys)
                                {
                                    <tr>
                                        <td style="@horizontalLineStyle @cellPadding">@key.Keys.FirstOrDefault()</td>
                                        <td style="@horizontalLineStyle @cellPadding">@key.Values.FirstOrDefault()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />

                    }
                    if (!string.IsNullOrWhiteSpace(Model.ElevatedRole))
                    {
                        <p><b>Your purchased elevated role: @Model.ElevatedRole</b></p>
                        <br />
                    }

                    <div class="row hidden-xs hidden-sm">
                        <div class="col-md-7">@Html.Translate("/OrderConfirmation/Labels/Product")</div>
                        <div class="col-md-1 text-right">@Html.Translate("/OrderConfirmation/Labels/Quantity")</div>
                        <div class="col-md-1 text-right">@Html.Translate("/OrderConfirmationMail/UnitPrice")</div>
                        <div class="col-md-1 text-right">@Html.Translate("/OrderConfirmationMail/Price")</div>
                        <div class="col-md-1 text-right">@Html.Translate("/OrderConfirmationMail/Discount")</div>
                        <div class="col-md-1 text-right">@Html.Translate("/OrderConfirmation/Labels/Total")</div>
                    </div>

                    foreach (ILineItem lineItem in Model.Items)
                    {
                        <hr />
                        <div class="row">
                            <div class="col-md-1 col-xs-3">
                                <a href="@lineItem.GetUrl()" class="link--black"><img src="@lineItem.GetThumbnailUrl()" /></a>
                            </div>
                            <div class="col-md-6 col-xs-9 text-left">
                                <a href="@lineItem.GetUrl()" class="link--black">@lineItem.GetEntryContent().DisplayName</a>
                            </div>
                            <div class="col-md-1 col-xs-12 text-right">
                                <label class="col-xs-8 visible-xs visible-sm">@Html.Translate("/OrderConfirmation/Labels/Quantity")</label>
                                @lineItem.Quantity.ToString("0")
                            </div>
                            <div class="col-md-1 col-xs-12 text-right">
                                <label class="col-xs-8 visible-xs visible-sm text-right">@Html.Translate("/OrderConfirmationMail/UnitPrice")</label>
                                @Helpers.RenderMoney(lineItem.PlacedPrice, Model.Currency)
                            </div>
                            <div class="col-md-1 col-xs-12 text-right">
                                <label class="col-xs-8 visible-xs visible-sm text-right">@Html.Translate("/OrderConfirmationMail/Price")</label>
                                @Helpers.RenderMoney(lineItem.PlacedPrice * lineItem.Quantity, Model.Currency)
                            </div>
                            <div class="col-md-1 col-xs-12 text-right">
                                <label class="col-xs-8 visible-xs visible-sm text-right">@Html.Translate("/OrderConfirmationMail/Discount")</label>
                                @Helpers.RenderMoney(lineItem.GetEntryDiscount(), Model.Currency)
                            </div>
                            <div class="col-md-1 col-xs-12 text-right">
                                <label class="col-xs-8 visible-xs visible-sm text-right">@Html.Translate("/OrderConfirmation/Labels/Total")</label>
                                @Helpers.RenderMoney(lineItem.GetDiscountedPrice(Model.Currency))
                            </div>
                        </div>
                    }
                    <div class="row">
                        <table class="table table-aside">
                            <tbody>
                                <tr>
                                    <td class="text-right col-md-10">@Html.Translate("/OrderConfirmationMail/OrderLevelDiscounts")</td>
                                    <td class="total-price text-right col-md-2">- @Model.OrderLevelDiscountTotal.ToString()</td>
                                </tr>
                                <tr>
                                    <td class="text-right">@Html.Translate("/OrderConfirmationMail/HandlingCost")</td>
                                    <td class="total-price text-right">@Model.HandlingTotal.ToString()</td>
                                </tr>
                                <tr>
                                    <td class="text-right">@Html.Translate("/OrderConfirmationMail/ShippingSubtotal")</td>
                                    <td class="total-price text-right">@Model.ShippingSubTotal.ToString()</td>
                                </tr>
                                <tr>
                                    <td class="text-right">@Html.Translate("/OrderConfirmationMail/ShippingDiscount")</td>
                                    <td class="total-price text-right">- @Model.ShippingDiscountTotal.ToString()</td>
                                </tr>
                                <tr>
                                    <td class="text-right">@Html.Translate("/OrderConfirmationMail/ShippingCost")</td>
                                    <td class="total-price text-right">@Model.ShippingTotal.ToString()</td>
                                </tr>
                                <tr>
                                    <td class="text-right">@Html.Translate("/OrderConfirmationMail/TaxCost")</td>
                                    <td class="total-price text-right">@Model.TaxTotal.ToString()</td>
                                </tr>
                                <tr>
                                    <td class="text-right"><strong>@Html.Translate("/OrderConfirmationMail/Total")</strong></td>
                                    <td class="total-price text-right"><strong>@Model.CartTotal.ToString()</strong></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="well quicksilver-well">

                                <h4>@Html.Translate("/OrderConfirmation/BillingDetails")</h4>
                                @Html.Partial("_Address", Model.BillingAddress)

                                <h4>@Html.Translate("/OrderConfirmation/ShippingDetails")</h4>
                                @foreach (var shippingAddress in Model.ShippingAddresses)
                                {
                                    @Html.Partial("_Address", shippingAddress)
                                }

                            </div>
                        </div>

                        <div class="col-md-6">

                            @foreach (var payment in Model.Payments)
                            {
                                Html.RenderPartial("_" + payment.PaymentMethodName + "Confirmation", payment);
                            }

                        </div>
                    </div>

                    <hr>

                    <div class="row">
                        @Html.PropertyFor(x => x.CurrentContent.RegistrationArea, new { ContactId = Model.ContactId, OrderNumber = Model.OrderGroupId })
                    </div>
                }
                else
                {
                    @Html.Translate("/OrderConfirmation/NoOrder")
                }
            </div>
        </div>
    </div>
</section>
