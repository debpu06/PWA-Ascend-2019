@{
    var actionName = (string)ViewContext.RouteData.Values["action"];
}
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">CMS Audit</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="@(actionName.ToLower() == "index" ? "active" : "")">
                    <a href="@Url.Action("Index", "CmsAudit")">Sites @MakeActiveIfItApplies("Index", actionName)</a>
                </li>
                <li class="@(actionName.ToLower() == "pagetypes" ? "active" : "")">
                    <a href="@Url.Action("PageTypes", "CmsAudit")">Page types @MakeActiveIfItApplies("PageTypes", actionName)</a>
                </li>
                <li class="@(actionName.ToLower() == "blocktypes" ? "active" : "")">
                    <a href="@Url.Action("BlockTypes", "CmsAudit")">Block types @MakeActiveIfItApplies("BlockTypes", actionName)</a>
                </li>
                <li class="@(actionName.ToLower() == "visitorgroups" ? "active" : "")">
                    <a href="@Url.Action("VisitorGroups", "CmsAudit")">Visitor Groups @MakeActiveIfItApplies("VisitorGroups", actionName)</a>
                </li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

@helper MakeActiveIfItApplies(string linkName, string actionName)
{
    if (linkName.ToLower() == actionName.ToLower())
    {
        <span class="sr-only">(current)</span>
    }
}